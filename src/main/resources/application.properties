# usuário e senha de conexão com o banco de dados
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/proposta}
spring.datasource.username=keycloak
spring.datasource.password=password
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate,jdbc.lob.non_contextual_creation=true

# configurações de log
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.use_sql_comments=true
logging.level.org.springframework.security=DEBUG

management.endpoint.health.show-details=always

# security
#spring.security.user.name=admin
#spring.security.user.password=admin

spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/proposta}
spring.security.oauth2.resourceserver.jwt.jwt-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/proposta/protocol/openid-connect/certs}

# prometheus
management.endpoints.web.exposure.include=info,health, metrics, prometheus
management.endpoints.prometheus.enabled=true

management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:proposta}
management.metrics.tags.ambiente=${AMBIENTE:teste}

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=proposta

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}
